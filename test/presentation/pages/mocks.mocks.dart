// Mocks generated by Mockito 5.4.4 from annotations
// in images/test/presentation/pages/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter_bloc/flutter_bloc.dart' as _i7;
import 'package:images/domain/entities/image_entity.dart' as _i4;
import 'package:images/presentation/viewmodels/home_viewmodel.dart' as _i3;
import 'package:infinite_scroll_pagination/infinite_scroll_pagination.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePagingController_0<PageKeyType, ItemType> extends _i1.SmartFake
    implements _i2.PagingController<PageKeyType, ItemType> {
  _FakePagingController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeViewModel extends _i1.Mock implements _i3.HomeViewModel {
  MockHomeViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PagingController<int, _i4.ImageEntity> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakePagingController_0<int, _i4.ImageEntity>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.PagingController<int, _i4.ImageEntity>);

  @override
  _i3.HomeViewModelState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i5.dummyValue<_i3.HomeViewModelState>(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.HomeViewModelState);

  @override
  _i6.Stream<_i3.HomeViewModelState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i6.Stream<_i3.HomeViewModelState>.empty(),
      ) as _i6.Stream<_i3.HomeViewModelState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> loadItems() => (super.noSuchMethod(
        Invocation.method(
          #loadItems,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> fetchPage(int? pageKey) => (super.noSuchMethod(
        Invocation.method(
          #fetchPage,
          [pageKey],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void search(String? value) => super.noSuchMethod(
        Invocation.method(
          #search,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void navigateToDetail(_i4.ImageEntity? image) => super.noSuchMethod(
        Invocation.method(
          #navigateToDetail,
          [image],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emitValue(_i3.HomeViewModelState? state) => super.noSuchMethod(
        Invocation.method(
          #emitValue,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i3.HomeViewModelState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i7.Change<_i3.HomeViewModelState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
